{"mappings":"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","sources":["src/js/gallery/gallery-render.js","src/js/movie-card/movie-card.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '14ce8915ef52d801924d89668f2ca827';\nconst HTTPS_IMG_ORIGINAL = 'https://image.tmdb.org/t/p/original';\n// const HTTPS_IMG_W500 = 'https://image.tmdb.org/t/p/w500';\nlet page = 1;\nlet src;\n\nconst getEl = selector => document.querySelector(selector);\n\ncreateGallery(page);\n\nfunction fetchAPI(page) {\n  return fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .catch(error => error.status);\n}\n\nfunction fetchGenres() {\n  return fetch(`${BASE_URL}/genre/movie/list?api_key=${API_KEY}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .catch(error => error.status);\n}\n\nfunction getGenreNames(filmsArr, genresArr) {\n  filmsArr.forEach(film => {\n    const names = film.genre_ids.map(id => {\n      const objId = genresArr.find(genre => genre.id === id);\n      return objId ? objId.name : 'Unknown';\n    });\n    film.genres =\n      names.length < 3\n        ? names.join(', ')\n        : `${names[0]}, ${names[1]} and other`;\n  });\n}\n\nfunction createGalleryMarkup(data) {\n  return data\n    .map(({ id, poster_path, original_title, release_date, genres }) => {\n      const relise = release_date.slice(0, 4);\n      src = HTTPS_IMG_ORIGINAL + poster_path;\n      const markup = `\n        <li class=\"item\" data-id=\"${id}\">\n            <a class=\"item__link\" href=\"\">\n            <div class=\"item__img-frame\">\n                <img\n                class=\"item__img\"\n                data-id=\"${id}\"\n                src=${src}\n                alt=\"${original_title}\"\n                loading=\"lazy\"\n                />\n            </div>\n            <div class=\"item__text-frame\">\n                <h3 class=\"item__text title\">${original_title}</h3>\n                <h3 class=\"item__text\">${genres} | ${relise}</h3>\n            </div>\n            </a>\n        </li>`;\n      getEl('.gallery').insertAdjacentHTML('beforeend', markup);\n    })\n    .join('');\n}\n\nasync function createGallery(page) {\n  const genresArr = await fetchGenres().then(data => data.genres);\n  const filmsArr = await fetchAPI(page).then(data => data.results);\n  getGenreNames(filmsArr, genresArr);\n  createGalleryMarkup(filmsArr);\n}\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '14ce8915ef52d801924d89668f2ca827';\nconst HTTPS_IMG_ORIGINAL = 'https://image.tmdb.org/t/p/original';\n\nconst getEl = selector => document.querySelector(selector);\n\ngetEl('.gallery').addEventListener('click', onPosterClick);\ngetEl('.modal__btn-close').addEventListener('click', closeModal);\ngetEl('.backdrop').addEventListener('click', onBackdropClick);\n\nfunction getMovieDetails(id) {\n  return fetch(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .catch(error => console.log(error));\n}\n\nfunction onPosterClick(e) {\n  e.preventDefault();\n  if (\n    (!e.target.closest('li') && !e.target.classList.contains('item')) ||\n    e.target.classList.contains('gallery')\n  ) {\n    return;\n  }\n  const idValue = e.target.closest('li').dataset.id;\n  getMovieDetails(idValue).then(data => {\n    createPosterMarkup(data);\n  });\n  openModal();\n}\n\nfunction openModal() {\n  document.addEventListener('keydown', onEscPress);\n  getEl('.backdrop').classList.remove('is-hidden');\n  getEl('body').classList.add('no-scroll');\n}\n\nfunction closeModal() {\n  document.removeEventListener('keydown', onEscPress);\n  getEl('.backdrop').classList.add('is-hidden');\n  getEl('body').classList.remove('no-scroll');\n  getEl('.modal__window').innerHTML = '';\n}\n\nfunction onBackdropClick(e) {\n  if (e.currentTarget === e.target) {\n    closeModal();\n  }\n}\n\nfunction onEscPress(e) {\n  if (e.code === 'Escape') {\n    closeModal();\n  }\n}\n\nfunction createPosterMarkup({\n  id,\n  original_title,\n  overview,\n  poster_path,\n  popularity,\n  vote_average,\n  vote_count,\n  genres,\n}) {\n  src = HTTPS_IMG_ORIGINAL + poster_path;\n  const popular = Math.round(popularity);\n  const genresName = genres.map(genre => genre.name).join(', ');\n  const markup = `\n            <div class=\"modal__container\">\n                <div class=\"modal__img-wrap\">\n                    <img class=\"modal__img\" src=\"${src}\" alt=\"${original_title}\">\n                </div>\n                <div class=\"modal__about-movie\">\n                    <h3 class=\"modal__title\" data-id=\"${id}\">${original_title}</h3>\n                    <div class=\"modal__text-wrap\">\n                        <ul>\n                            <li class=\"modal__text-characteristic\">Vote / Votes</li>\n                            <li class=\"modal__text-characteristic-value\"><span class=\"vote average\">${vote_average}</span> / <span class=\"vote count\">${vote_count}</span></li>\n                        </ul>\n                        <ul>\n                            <li class=\"modal__text-characteristic\">Popularity</li>\n                            <li class=\"modal__text-characteristic-value\">${popular}</li>\n                        </ul>\n                        <ul>\n                            <li class=\"modal__text-characteristic\">Original Title</li>\n                            <li class=\"modal__text-characteristic-value\">${original_title}</li>\n                        </ul>\n                        <ul>\n                            <li class=\"modal__text-characteristic\">Genre</li>\n                            <li class=\"modal__text-characteristic-value\">${genresName}</li>\n                        </ul>\n                    </div>\n                    <div class=\"modal__overview-wrap\">\n                        <h3 class=\"modal__overview-title\">About</h3>\n                        <p class=\"modal__overview-text\">${overview}</p>\n                    </div>\n                    <div class=\"modal__btn-wrap\">\n                        <button class=\"modal__btn w\" type=\"button\">add to Watched</button>\n                        <button class=\"modal__btn q\" type=\"button\">add to queue</button>\n                    </div>\n                </div>\n            </div>\n      `;\n  getEl('.modal__window').innerHTML = markup;\n}\n"],"names":["$58a6b4b7e5ce1881$var$src","async","page2","genresArr","fetch","then","response","ok","Error","status","json","catch","error","data","genres","filmsArr","page1","results","forEach","film","names","genre_ids","map","id","objId","find","genre","name","length","join","$58a6b4b7e5ce1881$var$getGenreNames","poster_path","original_title","release_date","relise","slice","markup","selector","document","querySelector","insertAdjacentHTML","$58a6b4b7e5ce1881$var$createGallery","$7c126d120175999e$var$getEl","$7c126d120175999e$var$closeModal","removeEventListener","$7c126d120175999e$var$onEscPress","classList","add","remove","innerHTML","e","code","addEventListener","preventDefault","target","closest","contains","dataset","console","log","overview","popularity","vote_average","vote_count","src","popular","Math","round","genresName","$7c126d120175999e$var$createPosterMarkup","currentTarget"],"version":3,"file":"library.aa581848.js.map"}