{"mappings":"AAAA,MAAMA,EAAaC,SAASC,cAAc,YAK1C,IACIC,EAAW,oCAEfC,eAA6BC,GAC3B,IACE,MAAMC,QAuBDC,MAAM,0FAAmDC,MAC9DC,IACE,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MAAM,IA5BYL,MAAKM,GAAQA,EAAKC,SAChDC,QAWMC,EAXkBZ,EAYzBE,MACL,iGAA0DU,KAC1DT,MAAKC,IACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MAAM,KAlBcL,MAAKM,GAAQA,EAAKI,UAgE7BH,EA/DFT,EAAVU,EAgETG,SAAQC,IACZ,MAAMC,EAAQD,EAAKE,UAAUC,KAAIC,IAC/B,MAAMC,EAAWV,EAAOW,MAAKC,GAASA,EAAMH,KAAOA,IAEnD,OAAOC,EAAWA,EAASG,KAAO,SAAS,IAG7CR,EAAKS,WACHR,EAAMS,OAAS,EAAIT,EAAMU,KAAK,MAAQ,GAAGV,EAAM,OAAOA,EAAM,WAAW,IAY7E,SAAwBW,GACtBA,EAAMb,SAAQC,IACPA,EAAKa,cACR9B,EAAW,qBAERiB,EAAKc,eACRd,EAAKc,aAAe,KAElBd,EAAKe,aAAe,GAAKf,EAAKe,aAAe,MAC/Cf,EAAKe,aAAe,EAAC,G,CA5FvBC,CAAepB,GA8BnB,SAAsBF,GACpB,MAAMuB,EAASvB,EACZS,KACC,EAACC,GAAEA,EAAES,YAAEA,EAAWK,MAAEA,EAAKT,WAAEA,EAAUK,aAAEA,EAAYC,aAAEA,MACnD,MAAMI,EAAOL,EAAaM,MAAM,EAAG,GACpBL,EAAaM,QAAQ,GAEpC,MAAO,iOAMgBjB,+BAPXrB,EAAW8B,+BASJK,4LAKwBA,sDACNT,OAAgBU,uFAIhD,IAGRR,KAAK,IACR/B,EAAW0C,UAAYL,C,CA1DrBM,CAAa3B,E,CACb,MAAO4B,GA0ET5C,EAAW0C,UAAY,qH,CAdzB,IAA6B3B,EArDbE,C,CAFhB4B,CAfW","sources":["src/js/main/main.js"],"sourcesContent":["const galleryRef = document.querySelector('.gallery');\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '14ce8915ef52d801924d89668f2ca827';\n\nlet page = 1;\nlet imgHttps = 'https://image.tmdb.org/t/p/w500/';\n\nasync function createGallery(page) {\n  try {\n    const genresArr = await getGenres().then(data => data.genres);\n    const filmsArr = await getApi(page).then(data => data.results);\n    createGenres(filmsArr, genresArr);\n    validationData(filmsArr);\n    createMarkup(filmsArr);\n  } catch (error) {\n    createError();\n  }\n}\n\ncreateGallery(page);\n\nfunction getApi(page) {\n  return fetch(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`\n  ).then(response => {\n    if (!response.ok) {\n      throw new Error(response.status);\n    }\n    return response.json();\n  });\n}\nfunction getGenres() {\n  return fetch(`${BASE_URL}/genre/movie/list?api_key=${API_KEY}`).then(\n    response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    }\n  );\n}\n\nfunction createMarkup(data) {\n  const markup = data\n    .map(\n      ({ id, poster_path, title, genre_name, release_date, vote_average }) => {\n        const date = release_date.slice(0, 4);\n        const rating = vote_average.toFixed(1);\n        const src = imgHttps + poster_path;\n        return `\n            <li class=\"item\">\n                <a class=\"item__link\" href=\"\">\n                <div class=\"item__img-frame\">\n                    <img\n                    class=\"item__img\"\n                    data-id=\"${id}\"\n                    src=${src}\n                    alt=\"${title}\"\n                    loading=\"lazy\"\n                    />\n                </div>\n                <div class=\"item__text-frame\">\n                    <h3 class=\"item__text title\">${title}</h3>\n                    <h3 class=\"item__text\">${genre_name} | ${date}</h3>\n                </div>\n                </a>\n            </li>\n            `;\n      }\n    )\n    .join(``);\n  galleryRef.innerHTML = markup;\n}\n\nfunction createGenres(films, genres) {\n  films.forEach(film => {\n    const names = film.genre_ids.map(id => {\n      const genreObj = genres.find(genre => genre.id === id);\n\n      return genreObj ? genreObj.name : 'Unknown';\n    });\n\n    film.genre_name =\n      names.length < 3 ? names.join(', ') : `${names[0]}, ${names[1]}, other`;\n  });\n}\n\nfunction createError() {\n  galleryRef.innerHTML = `\n  <section>\n      <p>Error</p>\n      <p>Oops, something went wrong. Please try again later.</p>\n    </section>`;\n}\n\nfunction validationData(films) {\n  films.forEach(film => {\n    if (!film.poster_path) {\n      imgHttps = './default-img.jpg';\n    }\n    if (!film.release_date) {\n      film.release_date = '';\n    }\n    if (film.vote_average < 0 || film.vote_average > 10) {\n      film.vote_average = 0;\n    }\n  });\n}\n"],"names":["$4491d8b02a49620b$var$galleryRef","document","querySelector","$4491d8b02a49620b$var$imgHttps","async","page1","genresArr","fetch","then","response","ok","Error","status","json","data","genres","filmsArr","page2","results","forEach","film","names","genre_ids","map","id","genreObj","find","genre","name","genre_name","length","join","films","poster_path","release_date","vote_average","$4491d8b02a49620b$var$validationData","markup","title","date","slice","toFixed","innerHTML","$4491d8b02a49620b$var$createMarkup","error","$4491d8b02a49620b$var$createGallery"],"version":3,"file":"library.86ef4804.js.map"}