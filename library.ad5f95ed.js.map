{"mappings":"AAIA,IACIA,GAqEJC,eAA6BC,GAC3B,MAAMC,QApDCC,MAAM,0FACVC,MAAKC,IACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MAAM,IAEvBC,OAAMC,GAASA,EAAMH,SA6CcJ,MAAKQ,GAAQA,EAAKC,SAClDC,QAjEUC,EAiEgBd,EAhEzBE,MAAM,iGAA0DY,KACpEX,MAAKC,IACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MAAM,IAEvBC,OAAMC,GAASA,EAAMH,UAyDcJ,MAAKQ,GAAQA,EAAKI,UAjE1D,IAAkBD,GAsBlB,SAAuBD,EAAUZ,GAC/BY,EAASG,SAAQC,IACf,MAAMC,EAAQD,EAAKE,UAAUC,KAAIC,IAC/B,MAAMC,EAAQrB,EAAUsB,MAAKC,GAASA,EAAMH,KAAOA,IACnD,OAAOC,EAAQA,EAAMG,KAAO,SAAS,IAEvCR,EAAKL,OACHM,EAAMQ,OAAS,EACXR,EAAMS,KAAK,MACX,GAAGT,EAAM,OAAOA,EAAM,cAAc,G,EAmC5CU,CAAcf,EAAUZ,GA/BGU,EAgCPE,EA/BbF,EACJS,KAAI,EAACC,GAAEA,EAAEQ,YAAEA,EAAWC,eAAEA,EAAcC,aAAEA,EAAYnB,OAAEA,MACrD,MAAMoB,EAASD,EAAaE,MAAM,EAAG,GACrCnC,EAhDqB,sCAgDM+B,EAC3B,MAAMK,EAAS,uCACeb,iLAKTA,2BACLvB,2BACCgC,wKAKwBA,kDACNlB,OAAYoB,8DA1DvC,IAAAG,KA8DF,WA9DcC,SAASC,cAAcF,IA8DzBG,mBAAmB,YAAaJ,EAAO,IAE1DP,KAAK,IAzBV,IAA6BhB,C,CArC7B4B,CALW","sources":["src/js/gallery/gallery-render.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '14ce8915ef52d801924d89668f2ca827';\nconst HTTPS_IMG_ORIGINAL = 'https://image.tmdb.org/t/p/original';\nconst HTTPS_IMG_W500 = 'https://image.tmdb.org/t/p/w500';\nlet page = 1;\nlet src;\n\nconst getEl = selector => document.querySelector(selector);\n\ncreateGallery(page);\n\nfunction fetchAPI(page) {\n  return fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .catch(error => error.status);\n}\n\nfunction fetchGENRES() {\n  return fetch(`${BASE_URL}/genre/movie/list?api_key=${API_KEY}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(response.status);\n      }\n      return response.json();\n    })\n    .catch(error => error.status);\n}\n\nfunction getGenreNames(filmsArr, genresArr) {\n  filmsArr.forEach(film => {\n    const names = film.genre_ids.map(id => {\n      const objId = genresArr.find(genre => genre.id === id);\n      return objId ? objId.name : 'Unknown';\n    });\n    film.genres =\n      names.length < 3\n        ? names.join(', ')\n        : `${names[0]}, ${names[1]} and other`;\n  });\n}\n\nfunction createGalleryMarkup(data) {\n  return data\n    .map(({ id, poster_path, original_title, release_date, genres }) => {\n      const relise = release_date.slice(0, 4);\n      src = HTTPS_IMG_ORIGINAL + poster_path;\n      const markup = `\n        <li class=\"item\" data-id=\"${id}\">\n            <a class=\"item__link\" href=\"\">\n            <div class=\"item__img-frame\">\n                <img\n                class=\"item__img\"\n                data-id=\"${id}\"\n                src=${src}\n                alt=\"${original_title}\"\n                loading=\"lazy\"\n                />\n            </div>\n            <div class=\"item__text-frame\">\n                <h3 class=\"item__text title\">${original_title}</h3>\n                <h3 class=\"item__text\">${genres} | ${relise}</h3>\n            </div>\n            </a>\n        </li>`;\n      getEl('.gallery').insertAdjacentHTML('beforeend', markup);\n    })\n    .join('');\n}\n\nasync function createGallery(page) {\n  const genresArr = await fetchGENRES().then(data => data.genres);\n  const filmsArr = await fetchAPI(page).then(data => data.results);\n  getGenreNames(filmsArr, genresArr);\n  createGalleryMarkup(filmsArr);\n}\n"],"names":["$58a6b4b7e5ce1881$var$src","async","page2","genresArr","fetch","then","response","ok","Error","status","json","catch","error","data","genres","filmsArr","page1","results","forEach","film","names","genre_ids","map","id","objId","find","genre","name","length","join","$58a6b4b7e5ce1881$var$getGenreNames","poster_path","original_title","release_date","relise","slice","markup","selector","document","querySelector","insertAdjacentHTML","$58a6b4b7e5ce1881$var$createGallery"],"version":3,"file":"library.ad5f95ed.js.map"}